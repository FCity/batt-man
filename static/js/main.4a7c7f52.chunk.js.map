{"version":3,"sources":["components/DevicesTable.js","components/Home.js","components/AddDeviceForm.js","components/UpdateDeviceForm.js","App.js","reportWebVitals.js","index.js"],"names":["DevicesTable","props","useContext","AppContext","devices","setDevices","getDevices","darkTheme","screenSize","useScreenSize","deleteDevice","deviceId","prevDevices","filter","device","id","localStorage","removeItem","themeStyle","className","page","map","type","name","room","exp","title","onClick","d","setItem","JSON","stringify","removeBattery","to","Home","AddDeviceForm","FormsContext","months","years","deviceTypes","roomTypes","useState","deviceType","setDeviceType","deviceName","setDeviceName","deviceRoom","setDeviceRoom","batteryExpMonth","setBatteryExpMonth","batteryExpYear","setBatteryExpYear","handleDeviceType","e","target","value","handleDeviceName","handleDeviceRoom","handleBatteryExpMonth","handleBatteryExpYear","htmlFor","onChange","roomType","month","year","uuid","console","log","UpdateDeviceForm","useEffect","find","match","params","slice","createContext","getScreenSize","window","innerWidth","setScreenSize","handleResize","addEventListener","removeEventListener","App","setDarkTheme","storedDevices","item","test","push","parse","getItem","data","useMemo","options","style","body","document","getElementsByTagName","backgroundColor","color","prev","Provider","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4a7c7f52.chunk.js","sourcesContent":["import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext, useScreenSize } from '../App'\r\n\r\nexport default function DevicesTable(props) {\r\n  const { devices, setDevices, getDevices, darkTheme } = useContext(AppContext)\r\n  const screenSize = useScreenSize()\r\n\r\n  const removeBattery = d => {\r\n    const device = {\r\n      id: d.id,\r\n      type: d.type,\r\n      name: d.name,\r\n      room: d.room,\r\n      exp: ''\r\n    }\r\n\r\n    localStorage.setItem(`device-${d.id}`, JSON.stringify(device))\r\n    getDevices()\r\n  }\r\n\r\n  const deleteDevice = deviceId => {\r\n    setDevices(prevDevices => prevDevices.filter(device => device.id !== deviceId))\r\n    localStorage.removeItem(`device-${deviceId}`)\r\n  }\r\n\r\n  const themeStyle = () => {\r\n    if (darkTheme) return 'bg-dark text-white'\r\n    else return ''\r\n  }\r\n\r\n  return (\r\n    <div className=\"devices-table\">\r\n      <h3>Devices:</h3>\r\n      { screenSize > 666 ?\r\n      <table className={'table ' + themeStyle()}>\r\n        <thead>\r\n          <tr>\r\n            <th>Type</th>\r\n            <th>Name</th>\r\n            <th>Room</th>\r\n            <th>Expires</th>\r\n            { props.page !== 'home' &&\r\n            <th>Actions</th>\r\n            }\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          { devices && devices.map(device => (\r\n          <tr key={device.id} className=\"device\">\r\n            <td>{device.type}</td>\r\n            <td>{device.name || 'no name'}</td>\r\n            <td>{device.room}</td>\r\n            { device.exp ?\r\n            <td className=\"exp\">{device.exp}\r\n              <span className=\"exp-tooltip\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  title=\"Remove Battery\"\r\n                  onClick={() => removeBattery(device)}>\r\n                  Pop <i className=\"fa fa-battery\"></i>\r\n                </button>\r\n              </span>\r\n            </td>\r\n            :\r\n            <td>no batteries</td>\r\n            }\r\n            { props.page !== 'home' &&\r\n            <td>\r\n              <div className=\"btn-group\">\r\n                <Link to={'/forms/update/device/' + device.id} className=\"btn btn-primary\">Update</Link>\r\n                <button type=\"button\" className=\"btn btn-danger\" onClick={() => deleteDevice(device.id)}>Delete</button>\r\n              </div>\r\n            </td>\r\n            }\r\n          </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      :\r\n      devices && devices.map(device => (\r\n      <table className={'table ' + themeStyle()}>\r\n        <tbody>\r\n          <tr>\r\n            <td><b>Type:</b></td>\r\n            <td>{device.type}</td>\r\n          </tr>\r\n          <tr>\r\n            <td><b>Name:</b></td>\r\n            <td>{device.name}</td>\r\n          </tr>\r\n          <tr>\r\n            <td><b>Room:</b></td>\r\n            <td>{device.room}</td>\r\n          </tr>\r\n          <tr>\r\n            <td><b>Expires:</b></td>\r\n            <td>{device.exp || 'no batteries'}</td>\r\n          </tr>\r\n          { props.page !== 'home' && \r\n          <tr>\r\n            <td><b>Actions:</b></td>\r\n            <td>\r\n              <div className=\"btn-group\">\r\n                <Link to={'/forms/update/device/' + device.id} className=\"btn btn-primary\">Update</Link>\r\n                <button type=\"button\" className=\"btn btn-danger\" onClick={() => deleteDevice(device.id)}>Delete</button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          }\r\n        </tbody>\r\n      </table>\r\n      )) }\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport DevicesTable from './DevicesTable'\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"home p-4\">\r\n      <h3 className=\"display-6 mt-4\">Welcome to BattMan - The Battery Manager</h3>\r\n      <div className=\"devices-table\">\r\n        <DevicesTable page=\"home\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { AppContext, FormsContext, useScreenSize } from '../App'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nexport default function AddDeviceForm() {\r\n  const { setDevices } = useContext(AppContext)\r\n  const { months, years, deviceTypes, roomTypes } = useContext(FormsContext)\r\n\r\n  const screenSize = useScreenSize()\r\n\r\n  const [deviceType, setDeviceType] = useState('')\r\n  const [deviceName, setDeviceName] = useState('')\r\n  const [deviceRoom, setDeviceRoom] = useState('')\r\n  const [batteryExpMonth, setBatteryExpMonth] = useState('')\r\n  const [batteryExpYear, setBatteryExpYear] = useState('')\r\n\r\n  const handleDeviceType = e => setDeviceType(e.target.value)\r\n  const handleDeviceName = e => setDeviceName(e.target.value)\r\n  const handleDeviceRoom = e => setDeviceRoom(e.target.value)\r\n  const handleBatteryExpMonth = e => setBatteryExpMonth(e.target.value)\r\n  const handleBatteryExpYear = e => setBatteryExpYear(e.target.value)\r\n\r\n  const addDevice = () => {\r\n    const device = {\r\n      id: uuid(),\r\n      type: deviceType,\r\n      name: deviceName,\r\n      room: deviceRoom,\r\n      exp: batteryExpMonth + ' ' + batteryExpYear\r\n    }\r\n\r\n    setDevices(prevDevices => [...prevDevices, device])\r\n    localStorage.setItem(`device-${device.id}`, JSON.stringify(device))\r\n\r\n    setDeviceType('')\r\n    setDeviceName('')\r\n    setDeviceRoom('')\r\n    setBatteryExpMonth('')\r\n    setBatteryExpYear('')\r\n\r\n    console.log('localStorage:', localStorage)\r\n  }\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      { screenSize > 666 ? \r\n      <>\r\n      <div className=\"input-group\">\r\n        <label className=\"input-group-text bg-white\" htmlFor=\"device-type\">Device type:</label>\r\n        <select className=\"form-select\" id=\"device-type\" value={deviceType} onChange={handleDeviceType}>\r\n          <option></option>\r\n          { deviceTypes.map(deviceType => <option key={deviceType} value={deviceType}>{deviceType}</option>) }\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <label className=\"input-group-text bg-white\" htmlFor=\"device-name\">Device name (optional):</label>\r\n        <input type=\"text\" className=\"form-control\" id=\"device-name\" value={deviceName} onChange={handleDeviceName}></input>\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <label className=\"input-group-text bg-white\" htmlFor=\"device-room\">Room this device is in:</label>\r\n        <select className=\"form-select\" id=\"device-room\" value={deviceRoom} onChange={handleDeviceRoom}>\r\n          <option></option>\r\n          { roomTypes.map(roomType => <option key={roomType} value={roomType}>{roomType}</option>) }\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <label className=\"input-group-text bg-white\" htmlFor=\"battery-exp\">Battery expiration date (optional):</label>\r\n        <select className=\"form-select\" id=\"battery-exp-month\" value={batteryExpMonth} onChange={handleBatteryExpMonth}>\r\n          <option>Month</option>\r\n          { months.map(month => <option key={month} value={month}>{month}</option>) }\r\n        </select>\r\n        <select className=\"form-select\" id=\"battery-exp-year\" value={batteryExpYear} onChange={handleBatteryExpYear}>\r\n          <option>Year</option>\r\n          { years.map(year => <option key={year} value={year}>{year}</option>) }\r\n        </select>\r\n      </div>\r\n      </>\r\n      :\r\n      <>\r\n      <label className=\"input-group-text bg-white\" htmlFor=\"device-type\">Device type:</label>\r\n      <select className=\"form-select\" id=\"device-type\" value={deviceType} onChange={handleDeviceType}>\r\n        <option></option>\r\n        { deviceTypes.map(deviceType => <option key={deviceType} value={deviceType}>{deviceType}</option>) }\r\n      </select>\r\n\r\n      <label className=\"input-group-text bg-white\" htmlFor=\"device-name\">Device name (optional):</label>\r\n      <input type=\"text\" className=\"form-control\" id=\"device-name\" value={deviceName} onChange={handleDeviceName}></input>\r\n\r\n      <label className=\"input-group-text bg-white\" htmlFor=\"device-room\">Room this device is in:</label>\r\n      <select className=\"form-select\" id=\"device-room\" value={deviceRoom} onChange={handleDeviceRoom}>\r\n        <option></option>\r\n        { roomTypes.map(roomType => <option key={roomType} value={roomType}>{roomType}</option>) }\r\n      </select>\r\n\r\n      <label className=\"input-group-text bg-white\" htmlFor=\"battery-exp\">Battery expiration date (optional):</label>\r\n      <select className=\"form-select\" id=\"battery-exp-month\" value={batteryExpMonth} onChange={handleBatteryExpMonth}>\r\n        <option>Month</option>\r\n        { months.map(month => <option key={month} value={month}>{month}</option>) }\r\n      </select>\r\n      <select className=\"form-select\" id=\"battery-exp-year\" value={batteryExpYear} onChange={handleBatteryExpYear}>\r\n        <option>Year</option>\r\n        { years.map(year => <option key={year} value={year}>{year}</option>) }\r\n      </select>\r\n      </>\r\n      }\r\n\r\n      <div className=\"d-grid\">\r\n        <button className=\"btn btn-lg btn-primary\" onClick={addDevice}>Add Device</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { AppContext, FormsContext, useScreenSize } from '../App'\r\n\r\nexport default function UpdateDeviceForm(props) {\r\n  const { devices, getDevices } = useContext(AppContext)\r\n  const { months, years, deviceTypes, roomTypes } = useContext(FormsContext)\r\n\r\n  const screenSize = useScreenSize()\r\n\r\n  const [deviceType, setDeviceType] = useState('')\r\n  const [deviceName, setDeviceName] = useState('')\r\n  const [deviceRoom, setDeviceRoom] = useState('')\r\n  const [batteryExpMonth, setBatteryExpMonth] = useState('')\r\n  const [batteryExpYear, setBatteryExpYear] = useState('')\r\n\r\n  const handleDeviceType = e => setDeviceType(e.target.value)\r\n  const handleDeviceName = e => setDeviceName(e.target.value)\r\n  const handleDeviceRoom = e => setDeviceRoom(e.target.value)\r\n  const handleBatteryExpMonth = e => setBatteryExpMonth(e.target.value)\r\n  const handleBatteryExpYear = e => setBatteryExpYear(e.target.value)\r\n\r\n  useEffect(() => {\r\n    const device = devices.find(device => device.id === props.match.params.id)\r\n\r\n    setDeviceType(device.type)\r\n    setDeviceName(device.name)\r\n    setDeviceRoom(device.room)\r\n    if (device.exp !== '') {\r\n      setBatteryExpMonth(device.exp.slice(0, 3))\r\n      setBatteryExpYear(device.exp.slice(-4))\r\n    }\r\n  }, [devices, props.match.params.id])\r\n\r\n  const updateDevice = () => {\r\n    const device = {\r\n      id: props.match.params.id,\r\n      type: deviceType,\r\n      name: deviceName,\r\n      room: deviceRoom,\r\n      exp: batteryExpMonth + ' ' + batteryExpYear\r\n    }\r\n\r\n    localStorage.setItem(`device-${props.match.params.id}`, JSON.stringify(device))\r\n    getDevices()\r\n\r\n    setDeviceType('')\r\n    setDeviceName('')\r\n    setDeviceRoom('')\r\n    setBatteryExpMonth('')\r\n    setBatteryExpYear('')\r\n\r\n    console.log('localStorage:', localStorage)\r\n  }\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      { screenSize > 666 ? \r\n      <>\r\n      <div className=\"input-group\">\r\n        <label className=\"input-group-text bg-white\" htmlFor=\"device-type\">Device type:</label>\r\n        <select className=\"form-select\" id=\"device-type\" value={deviceType} onChange={handleDeviceType}>\r\n          <option></option>\r\n          { deviceTypes.map(deviceType => <option key={deviceType} value={deviceType}>{deviceType}</option>) }\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <label className=\"input-group-text bg-white\" htmlFor=\"device-name\">Device name (optional):</label>\r\n        <input type=\"text\" className=\"form-control\" id=\"device-name\" value={deviceName} onChange={handleDeviceName}></input>\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <label className=\"input-group-text bg-white\" htmlFor=\"device-room\">Room this device is in:</label>\r\n        <select className=\"form-select\" id=\"device-room\" value={deviceRoom} onChange={handleDeviceRoom}>\r\n          <option></option>\r\n          { roomTypes.map(roomType => <option key={roomType} value={roomType}>{roomType}</option>) }\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <label className=\"input-group-text bg-white\" htmlFor=\"battery-exp\">Battery expiration date (optional):</label>\r\n        <select className=\"form-select\" id=\"battery-exp-month\" value={batteryExpMonth} onChange={handleBatteryExpMonth}>\r\n          <option>Month</option>\r\n          { months.map(month => <option key={month} value={month}>{month}</option>) }\r\n        </select>\r\n        <select className=\"form-select\" id=\"battery-exp-year\" value={batteryExpYear} onChange={handleBatteryExpYear}>\r\n          <option>Year</option>\r\n          { years.map(year => <option key={year} value={year}>{year}</option>) }\r\n        </select>\r\n      </div>\r\n      </>\r\n      :\r\n      <>\r\n      <label className=\"input-group-text bg-white\" htmlFor=\"device-type\">Device type:</label>\r\n      <select className=\"form-select\" id=\"device-type\" value={deviceType} onChange={handleDeviceType}>\r\n        <option></option>\r\n        { deviceTypes.map(deviceType => <option key={deviceType} value={deviceType}>{deviceType}</option>) }\r\n      </select>\r\n\r\n      <label className=\"input-group-text bg-white\" htmlFor=\"device-name\">Device name (optional):</label>\r\n      <input type=\"text\" className=\"form-control\" id=\"device-name\" value={deviceName} onChange={handleDeviceName}></input>\r\n\r\n      <label className=\"input-group-text bg-white\" htmlFor=\"device-room\">Room this device is in:</label>\r\n      <select className=\"form-select\" id=\"device-room\" value={deviceRoom} onChange={handleDeviceRoom}>\r\n        <option></option>\r\n        { roomTypes.map(roomType => <option key={roomType} value={roomType}>{roomType}</option>) }\r\n      </select>\r\n\r\n      <label className=\"input-group-text bg-white\" htmlFor=\"battery-exp\">Battery expiration date (optional):</label>\r\n      <select className=\"form-select\" id=\"battery-exp-month\" value={batteryExpMonth} onChange={handleBatteryExpMonth}>\r\n        <option>Month</option>\r\n        { months.map(month => <option key={month} value={month}>{month}</option>) }\r\n      </select>\r\n      <select className=\"form-select\" id=\"battery-exp-year\" value={batteryExpYear} onChange={handleBatteryExpYear}>\r\n        <option>Year</option>\r\n        { years.map(year => <option key={year} value={year}>{year}</option>) }\r\n      </select>\r\n      </>\r\n      }\r\n\r\n      <div className=\"d-grid\">\r\n        <button className=\"btn btn-lg btn-primary\" onClick={updateDevice}>Update Device</button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { createContext, useState, useEffect, useMemo } from 'react'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport Home from './components/Home'\r\nimport DevicesTable from './components/DevicesTable'\r\nimport AddDeviceForm from './components/AddDeviceForm'\r\nimport UpdateDeviceForm from './components/UpdateDeviceForm'\r\nimport './App.css'\r\n\r\n// Contexts\r\nexport const AppContext = createContext(null)\r\nexport const FormsContext = createContext(null)\r\n\r\n// Get Screen Size\r\nfunction getScreenSize() {\r\n  const { innerWidth: width } = window\r\n\r\n  return width\r\n}\r\n\r\n// Screen Size Setter Hook\r\nexport function useScreenSize() {\r\n  const [ screenSize, setScreenSize ] = useState(getScreenSize())\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setScreenSize(getScreenSize())\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize)\r\n\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [])\r\n\r\n  return screenSize\r\n}\r\n\r\nexport default function App() {\r\n  // Constants\r\n  const months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\r\n  const years = [2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030]\r\n  const deviceTypes = ['Remote', 'Pedal', 'Handheld', 'Flashlight', 'Watch', 'Clock', 'Other']\r\n  const roomTypes = ['Living Room', 'Kitchen', 'Bedroom', 'Bathroom', 'Garage', 'Office', 'Other']\r\n\r\n  // State\r\n  const [devices, setDevices] = useState([])\r\n  const [darkTheme, setDarkTheme] = useState(false)\r\n\r\n  // Get Devices\r\n  const getDevices = () => {\r\n    let storedDevices = []\r\n\r\n    for (let item in localStorage) {\r\n      if (/device/.test(item)) {\r\n        storedDevices.push(JSON.parse(localStorage.getItem(item)))\r\n      }\r\n    }\r\n\r\n    setDevices(storedDevices)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDevices()\r\n  }, [])\r\n\r\n  // Context Values\r\n  const data = useMemo(() => ({\r\n    devices, setDevices, getDevices,\r\n    darkTheme\r\n  }), [devices, darkTheme])\r\n\r\n  const options = { months, years, deviceTypes, roomTypes }\r\n\r\n  const themeStyle = () => {\r\n    const body = document.getElementsByTagName('body')[0]\r\n\r\n    if (darkTheme) body.style.backgroundColor = '#000'\r\n    else body.style.backgroundColor = '#fff'\r\n    \r\n    return {\r\n      backgroundColor: darkTheme ? '#000' : '#fff',\r\n      color: darkTheme ? '#fff' : '#000'\r\n    }\r\n  }\r\n\r\n  const themeBtnStyle = () => {\r\n    if (darkTheme) return 'btn-light'\r\n    else return 'btn-dark'\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"container-fluid\" style={themeStyle()}>\r\n        <div className=\"row\">\r\n          <div className=\"col-10 col-lg-11\">\r\n            <h1 className=\"display-1\">BattMan</h1>\r\n          </div>\r\n          <div className=\"col-2 col-lg-1\">\r\n            <button\r\n              className={'btn btn-theme ' + themeBtnStyle()}\r\n              title=\"Toggle Dark Theme\"\r\n              onClick={() => setDarkTheme(prev => !prev)}>\r\n                { darkTheme ?\r\n                <i className=\"fa fa-sun-o\"></i>\r\n                :\r\n                <i className=\"fa fa-moon-o\"></i>\r\n                }\r\n              </button>\r\n          </div>\r\n        </div>\r\n\r\n        <nav className=\"btn-group\">\r\n          <Link to=\"/\" className=\"btn btn-light\">Home</Link>\r\n          <Link to=\"/table/devices\" className=\"btn btn-light\">Edit Devices</Link>\r\n          <Link to=\"/forms/add/device\" className=\"btn btn-light\">Add Device</Link>\r\n        </nav>\r\n\r\n        <div className=\"app\">\r\n          <AppContext.Provider value={data}>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/table/devices\" component={DevicesTable} />\r\n            <FormsContext.Provider value={options}>\r\n              <Route path=\"/forms/add/device\" component={AddDeviceForm} />\r\n              <Route path=\"/forms/update/device/:id\" component={UpdateDeviceForm} />\r\n            </FormsContext.Provider>\r\n          </AppContext.Provider>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}